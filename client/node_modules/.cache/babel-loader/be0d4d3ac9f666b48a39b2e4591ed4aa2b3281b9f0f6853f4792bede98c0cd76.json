{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leesa\\\\Desktop\\\\OSSP-vivace\\\\tempo\\\\client\\\\src\\\\components\\\\MainSect\\\\Kanban.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = _ref => {\n  let {\n    columns,\n    onAddColumn,\n    onDeleteColumn,\n    onMoveColumn,\n    onMoveTask\n  } = _ref;\n  const handleDragEnd = result => {\n    const {\n      source,\n      destination,\n      type\n    } = result;\n    if (!destination) return;\n    if (type === \"COLUMN\") {\n      onMoveColumn(source.index, destination.index);\n    } else if (type === \"TASK\") {\n      onMoveTask({\n        columnId: source.droppableId,\n        index: source.index\n      }, {\n        columnId: destination.droppableId,\n        index: destination.index\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: handleDragEnd,\n    children: /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: \"all-columns\",\n      direction: \"horizontal\",\n      type: \"COLUMN\",\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        ...provided.droppableProps,\n        ref: provided.innerRef,\n        className: \"board\",\n        children: [columns.map((column, index) => /*#__PURE__*/_jsxDEV(Column, {\n          index: index,\n          column: column,\n          onDeleteColumn: onDeleteColumn,\n          onMoveTask: onMoveTask\n        }, column.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this)), provided.placeholder, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-column\",\n          onClick: () => onAddColumn(\"New Column\"),\n          children: \"Add Column\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n_c = Board;\nconst Column = _ref2 => {\n  _s();\n  let {\n    index,\n    column,\n    onDeleteColumn,\n    onMoveTask\n  } = _ref2;\n  const [tasks, setTasks] = useState(column.tasks);\n  const handleAddTask = () => {\n    const newTask = {\n      id: Math.random().toString(36).substring(2),\n      title: \"New Task\"\n    };\n    setTasks([...tasks, newTask]);\n  };\n  const handleDeleteTask = taskId => {\n    const filteredTasks = tasks.filter(task => task.id !== taskId);\n    setTasks(filteredTasks);\n  };\n  const handleMoveTask = result => {\n    const {\n      source,\n      destination\n    } = result;\n    if (!destination) return;\n    const movedTask = tasks.splice(source.index, 1)[0];\n    tasks.splice(destination.index, 0, movedTask);\n    setTasks([...tasks]);\n    onMoveTask({\n      columnId: column.id,\n      index: source.index\n    }, {\n      columnId: column.id,\n      index: destination.index\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(Draggable, {\n    draggableId: column.id,\n    index: index,\n    children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n      ...provided.draggableProps,\n      ref: provided.innerRef,\n      className: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-header\",\n        ...provided.dragHandleProps,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: column.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"delete-column\",\n          onClick: () => onDeleteColumn(column.id),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n        droppableId: column.id,\n        type: \"TASK\",\n        children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n          ...provided.droppableProps,\n          ref: provided.innerRef,\n          className: \"task-list\",\n          children: [tasks.map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n            draggableId: task.id,\n            index: index,\n            children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n              ...provided.draggableProps,\n              ...provided.dragHandleProps,\n              ref: provided.innerRef,\n              className: \"task\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"task-title\",\n                children: task.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"delete-task\",\n                onClick: () => handleDeleteTask(task.id),\n                children: \"X\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 45\n            }, this)\n          }, task.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 37\n          }, this)), provided.placeholder]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"add-task\",\n        onClick: handleAddTask,\n        children: \"+ Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n_s(Column, \"kWiWb9pQZ+lMcHg30NRUh2DAsSw=\");\n_c2 = Column;\nexport default Board;\nvar _c, _c2;\n$RefreshReg$(_c, \"Board\");\n$RefreshReg$(_c2, \"Column\");","map":{"version":3,"names":["React","useState","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","Board","_ref","columns","onAddColumn","onDeleteColumn","onMoveColumn","onMoveTask","handleDragEnd","result","source","destination","type","index","columnId","droppableId","onDragEnd","children","direction","provided","droppableProps","ref","innerRef","className","map","column","Column","id","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","onClick","_c","_ref2","_s","tasks","setTasks","handleAddTask","newTask","Math","random","toString","substring","title","handleDeleteTask","taskId","filteredTasks","filter","task","handleMoveTask","movedTask","splice","draggableId","draggableProps","dragHandleProps","_c2","$RefreshReg$"],"sources":["C:/Users/leesa/Desktop/OSSP-vivace/tempo/client/src/components/MainSect/Kanban.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\n\r\ntype Task = {\r\n    id: string;\r\n    title: string;\r\n};\r\n\r\ntype Column = {\r\n    id: string;\r\n    title: string;\r\n    tasks: Task[];\r\n};\r\n\r\nexport type BoardProps = {\r\n    columns: Column[];\r\n    onAddColumn: (title: string) => void;\r\n    onDeleteColumn: (id: string) => void;\r\n    onMoveColumn: (startIndex: number, endIndex: number) => void;\r\n    onMoveTask: (source: { columnId: string; index: number }, destination: { columnId: string; index: number }) => void;\r\n};\r\n\r\nconst Board: React.FC<BoardProps> = ({ columns, onAddColumn, onDeleteColumn, onMoveColumn, onMoveTask }) => {\r\n    const handleDragEnd = (result: any) => {\r\n        const { source, destination, type } = result;\r\n        if (!destination) return;\r\n        if (type === \"COLUMN\") {\r\n            onMoveColumn(source.index, destination.index);\r\n        } else if (type === \"TASK\") {\r\n            onMoveTask(\r\n                { columnId: source.droppableId, index: source.index },\r\n                { columnId: destination.droppableId, index: destination.index },\r\n            );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <DragDropContext onDragEnd={handleDragEnd}>\r\n            <Droppable droppableId=\"all-columns\" direction=\"horizontal\" type=\"COLUMN\">\r\n                {(provided) => (\r\n                    <div {...provided.droppableProps} ref={provided.innerRef} className=\"board\">\r\n                        {columns.map((column, index) => (\r\n                            <Column\r\n                                key={column.id}\r\n                                index={index}\r\n                                column={column}\r\n                                onDeleteColumn={onDeleteColumn}\r\n                                onMoveTask={onMoveTask}\r\n                            />\r\n                        ))}\r\n                        {provided.placeholder}\r\n                        <div className=\"add-column\" onClick={() => onAddColumn(\"New Column\")}>\r\n                            Add Column\r\n                        </div>\r\n                    </div>\r\n                )}\r\n            </Droppable>\r\n        </DragDropContext>\r\n    );\r\n};\r\n\r\ntype ColumnProps = {\r\n    index: number;\r\n    column: Column;\r\n    onDeleteColumn: (id: string) => void;\r\n    onMoveTask: (source: { columnId: string; index: number }, destination: { columnId: string; index: number }) => void;\r\n};\r\n\r\nconst Column: React.FC<ColumnProps> = ({ index, column, onDeleteColumn, onMoveTask }) => {\r\n    const [tasks, setTasks] = useState(column.tasks);\r\n\r\n    const handleAddTask = () => {\r\n        const newTask: Task = {\r\n            id: Math.random().toString(36).substring(2),\r\n            title: \"New Task\",\r\n        };\r\n        setTasks([...tasks, newTask]);\r\n    };\r\n\r\n    const handleDeleteTask = (taskId: string) => {\r\n        const filteredTasks = tasks.filter((task) => task.id !== taskId);\r\n        setTasks(filteredTasks);\r\n    };\r\n\r\n    const handleMoveTask = (result: any) => {\r\n        const { source, destination } = result;\r\n        if (!destination) return;\r\n        const movedTask = tasks.splice(source.index, 1)[0];\r\n        tasks.splice(destination.index, 0, movedTask);\r\n        setTasks([...tasks]);\r\n        onMoveTask({ columnId: column.id, index: source.index }, { columnId: column.id, index: destination.index });\r\n    };\r\n\r\n    return (\r\n        <Draggable draggableId={column.id} index={index}>\r\n            {(provided) => (\r\n                <div {...provided.draggableProps} ref={provided.innerRef} className=\"column\">\r\n                    <div className=\"column-header\" {...provided.dragHandleProps}>\r\n                        <h3>{column.title}</h3>\r\n                        <div className=\"delete-column\" onClick={() => onDeleteColumn(column.id)}>\r\n                            X\r\n                        </div>\r\n                    </div>\r\n                    <Droppable droppableId={column.id} type=\"TASK\">\r\n                        {(provided) => (\r\n                            <div {...provided.droppableProps} ref={provided.innerRef} className=\"task-list\">\r\n                                {tasks.map((task, index) => (\r\n                                    <Draggable key={task.id} draggableId={task.id} index={index}>\r\n                                        {(provided) => (\r\n                                            <div\r\n                                                {...provided.draggableProps}\r\n                                                {...provided.dragHandleProps}\r\n                                                ref={provided.innerRef}\r\n                                                className=\"task\"\r\n                                            >\r\n                                                <div className=\"task-title\">{task.title}</div>\r\n                                                <div className=\"delete-task\" onClick={() => handleDeleteTask(task.id)}>\r\n                                                    X\r\n                                                </div>\r\n                                            </div>\r\n                                        )}\r\n                                    </Draggable>\r\n                                ))}\r\n                                {provided.placeholder}\r\n                            </div>\r\n                        )}\r\n                    </Droppable>\r\n                    <div className=\"add-task\" onClick={handleAddTask}>\r\n                        + Add Task\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </Draggable>\r\n    );\r\n};\r\n\r\nexport default Board;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}