{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leesa\\\\Desktop\\\\OSSP-vivace\\\\tempo\\\\client\\\\src\\\\components\\\\MainSect\\\\MainSect.tsx\";\n/*\r\nimport React from \"react\";\r\nimport Board, { BoardProps } from \"./Kanban\";\r\n\r\nconst MainPage: React.FC = () => {\r\n    const boardProps: BoardProps = {\r\n        columns: [\r\n            {\r\n                id: \"column-1\",\r\n                title: \"Column 1\",\r\n                tasks: [\r\n                    {\r\n                        id: \"task-1\",\r\n                        title: \"Task 1\",\r\n                    },\r\n                    {\r\n                        id: \"task-2\",\r\n                        title: \"Task 2\",\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                id: \"column-2\",\r\n                title: \"Column 2\",\r\n                tasks: [\r\n                    {\r\n                        id: \"task-3\",\r\n                        title: \"Task 3\",\r\n                    },\r\n                    {\r\n                        id: \"task-4\",\r\n                        title: \"Task 4\",\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n        onAddColumn: (title: string) => {\r\n            // Add column logic here\r\n        },\r\n        onDeleteColumn: (id: string) => {\r\n            // Delete column logic here\r\n        },\r\n        onMoveColumn: (startIndex: number, endIndex: number) => {\r\n            // Move column logic here\r\n        },\r\n        onMoveTask: (source: { columnId: string; index: number }, destination: { columnId: string; index: number }) => {\r\n            // Move task logic here\r\n        },\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Main Page</h1>\r\n            <Board {...boardProps} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainPage;\r\n*/\n\n// import NetworkComponent from \"./Graph\";\n\n// function MainSection() {\n//     const networkData = {\n//         nodes: [\n//             {\n//                 id: \"node1\",\n//                 label: \"Node 1\",\n//                 description: \"Description of Node 1\",\n//                 image: \"image1.jpg\",\n//                 button1: () => console.log(\"Button 1 clicked\"),\n//                 button2: () => console.log(\"Button 2 clicked\"),\n//             },\n//             {\n//                 id: \"node2\",\n//                 label: \"Node 2\",\n//                 description: \"Description of Node 2\",\n//                 image: \"image2.jpg\",\n//                 button1: () => console.log(\"Button 1 clicked\"),\n//                 button2: () => console.log(\"Button 2 clicked\"),\n//             },\n//             {\n//                 id: \"node3\",\n//                 label: \"Node 3\",\n//                 description: \"Description of Node 3\",\n//                 image: \"image3.jpg\",\n//                 button1: () => console.log(\"Button 1 clicked\"),\n//                 button2: () => console.log(\"Button 2 clicked\"),\n//             },\n//         ],\n//         edges: [\n//             { id: \"edge1\", from: \"node1\", to: \"node2\" },\n//             { id: \"edge2\", from: \"node2\", to: \"node3\" },\n//             { id: \"edge3\", from: \"node3\", to: \"node1\" },\n//         ],\n//     };\n\n//     return (\n//         <div>\n//             <h2>Main Section</h2>\n//             <NetworkComponent data={networkData} />\n//         </div>\n//     );\n// }\n\n// export default MainSection;\n\n// import React from \"react\";\n// import ForceGraph2D, { NodeObject } from \"react-force-graph-2d\";\n\n// interface MainSectionProps {\n//     data: { nodes: NodeObject[]; edges: { source: string; targets: string[] }[] };\n// }\n\n// function MainSection({ data }: MainSectionProps) {\n//     return (\n//         <div className=\"main-section\">\n//             <ForceGraph2D graphData={data} />\n//         </div>\n//     );\n// }\n\n// export default MainSection;\nimport React from \"react\";\nimport KanbanBoard from \"./Kanban\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainSect = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Main Section\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(KanbanBoard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 130,\n    columnNumber: 9\n  }, this);\n};\n_c = MainSect;\nexport default MainSect;\nvar _c;\n$RefreshReg$(_c, \"MainSect\");","map":{"version":3,"names":["React","KanbanBoard","jsxDEV","_jsxDEV","MainSect","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/leesa/Desktop/OSSP-vivace/tempo/client/src/components/MainSect/MainSect.tsx"],"sourcesContent":["/*\r\nimport React from \"react\";\r\nimport Board, { BoardProps } from \"./Kanban\";\r\n\r\nconst MainPage: React.FC = () => {\r\n    const boardProps: BoardProps = {\r\n        columns: [\r\n            {\r\n                id: \"column-1\",\r\n                title: \"Column 1\",\r\n                tasks: [\r\n                    {\r\n                        id: \"task-1\",\r\n                        title: \"Task 1\",\r\n                    },\r\n                    {\r\n                        id: \"task-2\",\r\n                        title: \"Task 2\",\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                id: \"column-2\",\r\n                title: \"Column 2\",\r\n                tasks: [\r\n                    {\r\n                        id: \"task-3\",\r\n                        title: \"Task 3\",\r\n                    },\r\n                    {\r\n                        id: \"task-4\",\r\n                        title: \"Task 4\",\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n        onAddColumn: (title: string) => {\r\n            // Add column logic here\r\n        },\r\n        onDeleteColumn: (id: string) => {\r\n            // Delete column logic here\r\n        },\r\n        onMoveColumn: (startIndex: number, endIndex: number) => {\r\n            // Move column logic here\r\n        },\r\n        onMoveTask: (source: { columnId: string; index: number }, destination: { columnId: string; index: number }) => {\r\n            // Move task logic here\r\n        },\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Main Page</h1>\r\n            <Board {...boardProps} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainPage;\r\n*/\r\n\r\n// import NetworkComponent from \"./Graph\";\r\n\r\n// function MainSection() {\r\n//     const networkData = {\r\n//         nodes: [\r\n//             {\r\n//                 id: \"node1\",\r\n//                 label: \"Node 1\",\r\n//                 description: \"Description of Node 1\",\r\n//                 image: \"image1.jpg\",\r\n//                 button1: () => console.log(\"Button 1 clicked\"),\r\n//                 button2: () => console.log(\"Button 2 clicked\"),\r\n//             },\r\n//             {\r\n//                 id: \"node2\",\r\n//                 label: \"Node 2\",\r\n//                 description: \"Description of Node 2\",\r\n//                 image: \"image2.jpg\",\r\n//                 button1: () => console.log(\"Button 1 clicked\"),\r\n//                 button2: () => console.log(\"Button 2 clicked\"),\r\n//             },\r\n//             {\r\n//                 id: \"node3\",\r\n//                 label: \"Node 3\",\r\n//                 description: \"Description of Node 3\",\r\n//                 image: \"image3.jpg\",\r\n//                 button1: () => console.log(\"Button 1 clicked\"),\r\n//                 button2: () => console.log(\"Button 2 clicked\"),\r\n//             },\r\n//         ],\r\n//         edges: [\r\n//             { id: \"edge1\", from: \"node1\", to: \"node2\" },\r\n//             { id: \"edge2\", from: \"node2\", to: \"node3\" },\r\n//             { id: \"edge3\", from: \"node3\", to: \"node1\" },\r\n//         ],\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <h2>Main Section</h2>\r\n//             <NetworkComponent data={networkData} />\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default MainSection;\r\n\r\n// import React from \"react\";\r\n// import ForceGraph2D, { NodeObject } from \"react-force-graph-2d\";\r\n\r\n// interface MainSectionProps {\r\n//     data: { nodes: NodeObject[]; edges: { source: string; targets: string[] }[] };\r\n// }\r\n\r\n// function MainSection({ data }: MainSectionProps) {\r\n//     return (\r\n//         <div className=\"main-section\">\r\n//             <ForceGraph2D graphData={data} />\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default MainSection;\r\nimport React from \"react\";\r\nimport KanbanBoard from \"./Kanban\";\r\n\r\nconst MainSect: React.FC = () => {\r\n    return (\r\n        <div>\r\n            <h2>Main Section</h2>\r\n            <KanbanBoard />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainSect;\r\n"],"mappingszB,OAAOC,WAAW,MAAM,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,QAAkB,GAAGA,CAAA,KAAM;EAC7B,oBACID,OAAA;IAAAE,QAAA,gBACIF,OAAA;MAAAE,QAAA,EAAI;IAAY;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACrBN,OAAA,CAACF,WAAW;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACd,CAAC;AAEd,CAAC;AAACC,EAAA,GAPIN,QAAkB;AASxB,eAAeA,QAAQ;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}