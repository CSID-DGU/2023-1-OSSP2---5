{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leesa\\\\Desktop\\\\OSSP-vivace\\\\tempo\\\\client\\\\src\\\\components\\\\Main\\\\Network.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport \"./Network.css\";\n//for childType=kanban\n//for childType=MarkDown\n//for childtype=Network\n//for childType=List\n//노드 오른쪽 아래에 child-type에 따라 아이콘 넣기\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NetworkGraph = () => {\n  _s();\n  const svgRef = useRef(null);\n  const [selectedNodeId, setSelectedNodeId] = useState(null); // 이동된 위치로 상태 정의\n\n  const handleNodeButtonClick = (node, buttonId) => {\n    console.log(`Button ${buttonId} clicked for node: ${node.id}`);\n    setSelectedNodeId(node.id);\n  };\n  node.append(\"g\").attr(\"class\", \"node-icon\").attr(\"transform\", \"translate(85, 40)\") // Adjust icon position\n  .each(function (d) {\n    const icon = renderIcon(d.childType);\n    if (icon) {\n      ReactDOM.render( /*#__PURE__*/React.cloneElement(icon), this);\n    }\n  });\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n    const width = +svg.attr(\"width\");\n    const height = +svg.attr(\"height\");\n    const nodes = [{\n      id: \"node1\",\n      label: \"Node 1\",\n      hasButton: true,\n      childType: \"Network\",\n      rate: 15 / 15\n    }, {\n      id: \"node2\",\n      label: \"Node 2\",\n      hasButton: true,\n      childType: \"Kanban\",\n      rate: 5 / 10\n    }, {\n      id: \"node3\",\n      label: \"Node 3\",\n      hasButton: true,\n      childType: \"List\",\n      rate: 2 / 4\n    }\n    // ...\n    ];\n\n    const links = [{\n      source: nodes.find(node => node.id === \"node1\"),\n      target: nodes.find(node => node.id === \"node2\")\n    }, {\n      source: nodes.find(node => node.id === \"node1\"),\n      target: nodes.find(node => node.id === \"node3\")\n    }\n    // Add more links here...\n    ];\n\n    const simulation = d3.forceSimulation(nodes).force(\"link\", d3.forceLink(links).id(d => d.id).distance(200)).force(\"charge\", d3.forceManyBody().strength(-200)).force(\"center\", d3.forceCenter(width / 2, height / 2));\n    svg.append(\"defs\").append(\"marker\").attr(\"id\", \"arrowhead\").attr(\"viewBox\", \"-0 -5 10 10\").attr(\"refX\", 8) // 화살표 위치 조정\n    .attr(\"refY\", 0).attr(\"orient\", \"auto\").attr(\"markerWidth\", 10).attr(\"markerHeight\", 10).attr(\"xoverflow\", \"visible\").append(\"svg:path\").attr(\"d\", \"M 0,-5 L 10 ,0 L 0,5\") // 화살표 모양 지정\n    .attr(\"fill\", \"#999\");\n    const link = svg.selectAll(\".link\").data(links).enter().append(\"line\").attr(\"class\", \"link\").attr(\"marker-end\", \"url(#arrowhead)\"); // 화살표로 된 링크 표시\n\n    const node = svg.selectAll(\".node\").data(nodes).enter().append(\"g\").attr(\"class\", \"node\").call(d3.drag().on(\"start\", dragStart).on(\"drag\", drag).on(\"end\", dragEnd));\n    node.append(\"rect\").attr(\"class\", \"node-background\").attr(\"x\", 0).attr(\"y\", 0).attr(\"width\", 100).attr(\"height\", 60).style(\"fill\", d => `rgba(216, 228, 252, ${d.rate * 0.7 + 0.3})`); // Adjust opacity based on rate\n\n    node.append(\"text\").attr(\"class\", \"label\").attr(\"x\", 25).attr(\"y\", 15).attr(\"width\", 50).attr(\"height\", 15).attr(\"text-anchor\", \"middle\").text(d => d.label);\n    node.append(\"rect\").attr(\"class\", \"node-rect\").attr(\"x\", 85).attr(\"y\", 6).attr(\"width\", 10).attr(\"height\", 10).on(\"click\", (event, d) => handleNodeButtonClick(d, \"1\"));\n    node.append(\"rect\").attr(\"class\", \"node-button\").attr(\"x\", 70).attr(\"y\", 6).attr(\"width\", 10).attr(\"height\", 10).on(\"click\", (event, d) => handleNodeButtonClick(d, \"2\"));\n    node.append(\"g\").attr(\"class\", \"node-icon\").attr(\"transform\", \"translate(85, 40)\") // Adjust icon position\n    .each(function (d) {\n      const icon = renderIcon(d.childType);\n      if (icon) {\n        ReactDOM.render( /*#__PURE__*/React.cloneElement(icon), this);\n      }\n    });\n    simulation.on(\"tick\", () => {\n      link.attr(\"x1\", d => d.source.x + 100).attr(\"y1\", d => d.source.y + 30).attr(\"x2\", d => d.target.x).attr(\"y2\", d => d.target.y + 30);\n      node.attr(\"transform\", d => `translate(${d.x},${d.y})`);\n    });\n    function drag(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    function dragStart(event, d) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    function dragEnd(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n    return () => {\n      simulation.stop();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef,\n      width: 1680,\n      height: 1050\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Selected Node ID: \", selectedNodeId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 9\n  }, this);\n};\n_s(NetworkGraph, \"APQ+nBbtC/gLa9Pm7Dyc8zzFTJ8=\");\n_c = NetworkGraph;\nexport default NetworkGraph;\nvar _c;\n$RefreshReg$(_c, \"NetworkGraph\");","map":{"version":3,"names":["React","useRef","useEffect","useState","d3","jsxDEV","_jsxDEV","NetworkGraph","_s","svgRef","selectedNodeId","setSelectedNodeId","handleNodeButtonClick","node","buttonId","console","log","id","append","attr","each","d","icon","renderIcon","childType","ReactDOM","render","cloneElement","svg","select","current","width","height","nodes","label","hasButton","rate","links","source","find","target","simulation","forceSimulation","force","forceLink","distance","forceManyBody","strength","forceCenter","link","selectAll","data","enter","call","drag","on","dragStart","dragEnd","style","text","event","x","y","fx","fy","active","alphaTarget","restart","stop","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/leesa/Desktop/OSSP-vivace/tempo/client/src/components/Main/Network.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport \"./Network.css\";\r\nimport ViewKanbanIcon from \"@mui/icons-material/ViewKanban\"; //for childType=kanban\r\nimport DescriptionIcon from \"@mui/icons-material/Description\"; //for childType=MarkDown\r\nimport AccountTreeIcon from \"@mui/icons-material/AccountTree\"; //for childtype=Network\r\nimport ListIcon from \"@mui/icons-material/List\"; //for childType=List\r\n\r\n//노드 오른쪽 아래에 child-type에 따라 아이콘 넣기\r\n\r\ninterface NodeData extends d3.SimulationNodeDatum {\r\n    id: string;\r\n    label: string;\r\n    hasButton: boolean;\r\n    x?: number;\r\n    y?: number;\r\n    childType: string;\r\n    rate: number;\r\n}\r\n\r\ninterface LinkData {\r\n    source: NodeData;\r\n    target: NodeData;\r\n}\r\n\r\nconst NetworkGraph = () => {\r\n    const svgRef = useRef<SVGSVGElement>(null);\r\n    const [selectedNodeId, setSelectedNodeId] = useState<string | null>(null); // 이동된 위치로 상태 정의\r\n\r\n    const handleNodeButtonClick = (node: NodeData, buttonId: string) => {\r\n        console.log(`Button ${buttonId} clicked for node: ${node.id}`);\r\n        setSelectedNodeId(node.id);\r\n    };\r\n\r\n    node.append(\"g\")\r\n        .attr(\"class\", \"node-icon\")\r\n        .attr(\"transform\", \"translate(85, 40)\") // Adjust icon position\r\n        .each(function (d) {\r\n            const icon = renderIcon(d.childType);\r\n            if (icon) {\r\n                ReactDOM.render(React.cloneElement(icon), this);\r\n            }\r\n        });\r\n\r\n    useEffect(() => {\r\n        const svg = d3.select(svgRef.current);\r\n        const width = +svg.attr(\"width\");\r\n        const height = +svg.attr(\"height\");\r\n\r\n        const nodes: NodeData[] = [\r\n            { id: \"node1\", label: \"Node 1\", hasButton: true, childType: \"Network\", rate: 15 / 15 },\r\n            { id: \"node2\", label: \"Node 2\", hasButton: true, childType: \"Kanban\", rate: 5 / 10 },\r\n            { id: \"node3\", label: \"Node 3\", hasButton: true, childType: \"List\", rate: 2 / 4 },\r\n            // ...\r\n        ];\r\n\r\n        const links: LinkData[] = [\r\n            { source: nodes.find((node) => node.id === \"node1\")!, target: nodes.find((node) => node.id === \"node2\")! },\r\n            { source: nodes.find((node) => node.id === \"node1\")!, target: nodes.find((node) => node.id === \"node3\")! },\r\n            // Add more links here...\r\n        ];\r\n\r\n        const simulation = d3\r\n            .forceSimulation<NodeData, LinkData>(nodes)\r\n            .force(\r\n                \"link\",\r\n                d3\r\n                    .forceLink<NodeData, LinkData>(links)\r\n                    .id((d) => d.id)\r\n                    .distance(200),\r\n            )\r\n            .force(\"charge\", d3.forceManyBody().strength(-200))\r\n            .force(\"center\", d3.forceCenter(width / 2, height / 2));\r\n\r\n        svg.append(\"defs\")\r\n            .append(\"marker\")\r\n            .attr(\"id\", \"arrowhead\")\r\n            .attr(\"viewBox\", \"-0 -5 10 10\")\r\n            .attr(\"refX\", 8) // 화살표 위치 조정\r\n            .attr(\"refY\", 0)\r\n            .attr(\"orient\", \"auto\")\r\n            .attr(\"markerWidth\", 10)\r\n            .attr(\"markerHeight\", 10)\r\n            .attr(\"xoverflow\", \"visible\")\r\n            .append(\"svg:path\")\r\n            .attr(\"d\", \"M 0,-5 L 10 ,0 L 0,5\") // 화살표 모양 지정\r\n            .attr(\"fill\", \"#999\");\r\n\r\n        const link = svg\r\n            .selectAll(\".link\")\r\n            .data(links)\r\n            .enter()\r\n            .append(\"line\")\r\n            .attr(\"class\", \"link\")\r\n            .attr(\"marker-end\", \"url(#arrowhead)\"); // 화살표로 된 링크 표시\r\n\r\n        const node = svg\r\n            .selectAll<SVGGElement, NodeData>(\".node\")\r\n            .data(nodes)\r\n            .enter()\r\n            .append(\"g\")\r\n            .attr(\"class\", \"node\")\r\n            .call(d3.drag<SVGGElement, NodeData>().on(\"start\", dragStart).on(\"drag\", drag).on(\"end\", dragEnd));\r\n\r\n        node.append(\"rect\")\r\n            .attr(\"class\", \"node-background\")\r\n            .attr(\"x\", 0)\r\n            .attr(\"y\", 0)\r\n            .attr(\"width\", 100)\r\n            .attr(\"height\", 60)\r\n            .style(\"fill\", (d) => `rgba(216, 228, 252, ${d.rate * 0.7 + 0.3})`); // Adjust opacity based on rate\r\n\r\n        node.append(\"text\")\r\n            .attr(\"class\", \"label\")\r\n            .attr(\"x\", 25)\r\n            .attr(\"y\", 15)\r\n            .attr(\"width\", 50)\r\n            .attr(\"height\", 15)\r\n            .attr(\"text-anchor\", \"middle\")\r\n            .text((d) => d.label);\r\n\r\n        node.append(\"rect\")\r\n            .attr(\"class\", \"node-rect\")\r\n            .attr(\"x\", 85)\r\n            .attr(\"y\", 6)\r\n            .attr(\"width\", 10)\r\n            .attr(\"height\", 10)\r\n            .on(\"click\", (event: any, d: NodeData) => handleNodeButtonClick(d, \"1\"));\r\n\r\n        node.append(\"rect\")\r\n            .attr(\"class\", \"node-button\")\r\n            .attr(\"x\", 70)\r\n            .attr(\"y\", 6)\r\n            .attr(\"width\", 10)\r\n            .attr(\"height\", 10)\r\n            .on(\"click\", (event: any, d: NodeData) => handleNodeButtonClick(d, \"2\"));\r\n\r\n        node.append(\"g\")\r\n            .attr(\"class\", \"node-icon\")\r\n            .attr(\"transform\", \"translate(85, 40)\") // Adjust icon position\r\n            .each(function (d) {\r\n                const icon = renderIcon(d.childType);\r\n                if (icon) {\r\n                    ReactDOM.render(React.cloneElement(icon), this);\r\n                }\r\n            });\r\n\r\n        simulation.on(\"tick\", () => {\r\n            link.attr(\"x1\", (d) => d.source.x! + 100)\r\n                .attr(\"y1\", (d) => d.source.y! + 30)\r\n                .attr(\"x2\", (d) => d.target.x!)\r\n                .attr(\"y2\", (d) => d.target.y! + 30);\r\n\r\n            node.attr(\"transform\", (d) => `translate(${d.x},${d.y})`);\r\n        });\r\n\r\n        function drag(event: d3.D3DragEvent<SVGGElement, NodeData, NodeData | undefined>, d: NodeData) {\r\n            d.fx = event.x;\r\n            d.fy = event.y;\r\n        }\r\n\r\n        function dragStart(event: d3.D3DragEvent<SVGGElement, NodeData, NodeData | undefined>, d: NodeData) {\r\n            if (!event.active) simulation.alphaTarget(0.3).restart();\r\n            d.fx = d.x;\r\n            d.fy = d.y;\r\n        }\r\n\r\n        function dragEnd(event: d3.D3DragEvent<SVGGElement, NodeData, NodeData | undefined>, d: NodeData) {\r\n            if (!event.active) simulation.alphaTarget(0);\r\n            d.fx = null;\r\n            d.fy = null;\r\n        }\r\n        return () => {\r\n            simulation.stop();\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <svg ref={svgRef} width={1680} height={1050}></svg>\r\n            <div>Selected Node ID: {selectedNodeId}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NetworkGraph;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}