{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leesa\\\\Desktop\\\\OSSP-vivace\\\\tempo\\\\client\\\\src\\\\components\\\\LSideBar\\\\LSideBar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./LSideBar.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LSidebar = () => {\n  _s();\n  const [searchTerm, setSearchTerm] = useState(\"\");\n  const [isSidebarOpen, setIsSidebarOpen] = useState(true);\n  const user = {\n    name: \"John Doe\",\n    email: \"johndoe@example.com\",\n    profileImage: \"path/to/profile/image.jpg\"\n  };\n  const projects = [{\n    id: 1,\n    name: \"Project 1\"\n  }, {\n    id: 2,\n    name: \"Project 2\"\n  }, {\n    id: 3,\n    name: \"Project 3\"\n  }];\n  const filteredProjects = projects.filter(project => project.name.toLowerCase().includes(searchTerm.toLowerCase()));\n  const handleToggleSidebar = () => {\n    setIsSidebarOpen(prevState => !prevState);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `sidebar ${isSidebarOpen ? \"\" : \"closed\"}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: user.profileImage,\n          alt: \"Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: user.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: user.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"\\uD504\\uB85C\\uC81D\\uD2B8 \\uAC80\\uC0C9\",\n        value: searchTerm,\n        onChange: e => setSearchTerm(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"project-list\",\n        children: filteredProjects.map(project => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: project.name\n        }, project.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(LSidebar, \"jeSUO7py8yl68aVj8lRp+uZqE2k=\");\n_c = LSidebar;\nexport default LSidebar;\nvar _c;\n$RefreshReg$(_c, \"LSidebar\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","LSidebar","_s","searchTerm","setSearchTerm","isSidebarOpen","setIsSidebarOpen","user","name","email","profileImage","projects","id","filteredProjects","filter","project","toLowerCase","includes","handleToggleSidebar","prevState","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","map","_c","$RefreshReg$"],"sources":["C:/Users/leesa/Desktop/OSSP-vivace/tempo/client/src/components/LSideBar/LSideBar.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./LSideBar.css\";\r\n\r\ninterface Project {\r\n    id: number;\r\n    name: string;\r\n}\r\n\r\ninterface User {\r\n    name: string;\r\n    email: string;\r\n    profileImage: string;\r\n}\r\n\r\nconst LSidebar: React.FC = () => {\r\n    const [searchTerm, setSearchTerm] = useState(\"\");\r\n    const [isSidebarOpen, setIsSidebarOpen] = useState(true);\r\n\r\n    const user: User = {\r\n        name: \"John Doe\",\r\n        email: \"johndoe@example.com\",\r\n        profileImage: \"path/to/profile/image.jpg\",\r\n    };\r\n\r\n    const projects: Project[] = [\r\n        { id: 1, name: \"Project 1\" },\r\n        { id: 2, name: \"Project 2\" },\r\n        { id: 3, name: \"Project 3\" },\r\n    ];\r\n\r\n    const filteredProjects = projects.filter((project) =>\r\n        project.name.toLowerCase().includes(searchTerm.toLowerCase()),\r\n    );\r\n\r\n    const handleToggleSidebar = () => {\r\n        setIsSidebarOpen((prevState) => !prevState);\r\n    };\r\n\r\n    return (\r\n        <div className={`sidebar ${isSidebarOpen ? \"\" : \"closed\"}`}>\r\n            <div className=\"content\">\r\n                <div className=\"profile\">\r\n                    <img src={user.profileImage} alt=\"Profile\" />\r\n                    <div>{user.name}</div>\r\n                    <div>{user.email}</div>\r\n                </div>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"프로젝트 검색\"\r\n                    value={searchTerm}\r\n                    onChange={(e) => setSearchTerm(e.target.value)}\r\n                />\r\n                <ul className=\"project-list\">\r\n                    {filteredProjects.map((project) => (\r\n                        <li key={project.id}>{project.name}</li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LSidebar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}