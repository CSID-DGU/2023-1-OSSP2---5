{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leesa\\\\Desktop\\\\OSSP-vivace\\\\tempo\\\\client\\\\src\\\\components\\\\MainSect\\\\MainSect.tsx\";\n/*\r\nimport React from \"react\";\r\nimport Board, { BoardProps } from \"./Kanban\";\r\n\r\nconst MainPage: React.FC = () => {\r\n    const boardProps: BoardProps = {\r\n        columns: [\r\n            {\r\n                id: \"column-1\",\r\n                title: \"Column 1\",\r\n                tasks: [\r\n                    {\r\n                        id: \"task-1\",\r\n                        title: \"Task 1\",\r\n                    },\r\n                    {\r\n                        id: \"task-2\",\r\n                        title: \"Task 2\",\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                id: \"column-2\",\r\n                title: \"Column 2\",\r\n                tasks: [\r\n                    {\r\n                        id: \"task-3\",\r\n                        title: \"Task 3\",\r\n                    },\r\n                    {\r\n                        id: \"task-4\",\r\n                        title: \"Task 4\",\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n        onAddColumn: (title: string) => {\r\n            // Add column logic here\r\n        },\r\n        onDeleteColumn: (id: string) => {\r\n            // Delete column logic here\r\n        },\r\n        onMoveColumn: (startIndex: number, endIndex: number) => {\r\n            // Move column logic here\r\n        },\r\n        onMoveTask: (source: { columnId: string; index: number }, destination: { columnId: string; index: number }) => {\r\n            // Move task logic here\r\n        },\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Main Page</h1>\r\n            <Board {...boardProps} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainPage;\r\n*/\n\n/*\r\nimport NetworkComponent from \"./Graph\";\r\n\r\nfunction MainSection() {\r\n    const networkData = {\r\n        nodes: [\r\n            {\r\n                id: \"node1\",\r\n                label: \"Node 1\",\r\n                description: \"Description of Node 1\",\r\n                image: \"image1.jpg\",\r\n                button1: () => console.log(\"Button 1 clicked\"),\r\n                button2: () => console.log(\"Button 2 clicked\"),\r\n            },\r\n            {\r\n                id: \"node2\",\r\n                label: \"Node 2\",\r\n                description: \"Description of Node 2\",\r\n                image: \"image2.jpg\",\r\n                button1: () => console.log(\"Button 1 clicked\"),\r\n                button2: () => console.log(\"Button 2 clicked\"),\r\n            },\r\n            {\r\n                id: \"node3\",\r\n                label: \"Node 3\",\r\n                description: \"Description of Node 3\",\r\n                image: \"image3.jpg\",\r\n                button1: () => console.log(\"Button 1 clicked\"),\r\n                button2: () => console.log(\"Button 2 clicked\"),\r\n            },\r\n        ],\r\n        edges: [\r\n            { id: \"edge1\", from: \"node1\", to: \"node2\" },\r\n            { id: \"edge2\", from: \"node2\", to: \"node3\" },\r\n            { id: \"edge3\", from: \"node3\", to: \"node1\" },\r\n        ],\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Main Section</h2>\r\n            <NetworkComponent data={networkData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainSection;\r\n*/\n\nimport React from \"react\";\nimport MyGraph from \"./forceGraph\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst data = {\n  nodes: [{\n    id: 1,\n    label: \"Node 1\",\n    contents: \"Some contents for node 1\"\n  }, {\n    id: 2,\n    label: \"Node 2\",\n    contents: \"Some contents for node 2\"\n  }, {\n    id: 3,\n    label: \"Node 3\",\n    contents: \"Some contents for node 3\"\n  }, {\n    id: 4,\n    label: \"Node 4\",\n    contents: \"Some contents for node 4\"\n  }],\n  edges: [{\n    source: \"1\",\n    targets: [\"2\"]\n  }, {\n    source: \"2\",\n    targets: [\"3\"]\n  }, {\n    source: \"3\",\n    targets: [\"4\"]\n  }]\n};\nfunction MainSection() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100vw\",\n      height: \"100vh\"\n    },\n    children: /*#__PURE__*/_jsxDEV(MyGraph, {\n      data: data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 9\n  }, this);\n}\n_c = MainSection;\nexport default MainSection;\nvar _c;\n$RefreshReg$(_c, \"MainSection\");","map":{"version":3,"names":["React","MyGraph","jsxDEV","_jsxDEV","data","nodes","id","label","contents","edges","source","targets","MainSection","style","width","height","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/leesa/Desktop/OSSP-vivace/tempo/client/src/components/MainSect/MainSect.tsx"],"sourcesContent":["/*\r\nimport React from \"react\";\r\nimport Board, { BoardProps } from \"./Kanban\";\r\n\r\nconst MainPage: React.FC = () => {\r\n    const boardProps: BoardProps = {\r\n        columns: [\r\n            {\r\n                id: \"column-1\",\r\n                title: \"Column 1\",\r\n                tasks: [\r\n                    {\r\n                        id: \"task-1\",\r\n                        title: \"Task 1\",\r\n                    },\r\n                    {\r\n                        id: \"task-2\",\r\n                        title: \"Task 2\",\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                id: \"column-2\",\r\n                title: \"Column 2\",\r\n                tasks: [\r\n                    {\r\n                        id: \"task-3\",\r\n                        title: \"Task 3\",\r\n                    },\r\n                    {\r\n                        id: \"task-4\",\r\n                        title: \"Task 4\",\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n        onAddColumn: (title: string) => {\r\n            // Add column logic here\r\n        },\r\n        onDeleteColumn: (id: string) => {\r\n            // Delete column logic here\r\n        },\r\n        onMoveColumn: (startIndex: number, endIndex: number) => {\r\n            // Move column logic here\r\n        },\r\n        onMoveTask: (source: { columnId: string; index: number }, destination: { columnId: string; index: number }) => {\r\n            // Move task logic here\r\n        },\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Main Page</h1>\r\n            <Board {...boardProps} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainPage;\r\n*/\r\n\r\n/*\r\nimport NetworkComponent from \"./Graph\";\r\n\r\nfunction MainSection() {\r\n    const networkData = {\r\n        nodes: [\r\n            {\r\n                id: \"node1\",\r\n                label: \"Node 1\",\r\n                description: \"Description of Node 1\",\r\n                image: \"image1.jpg\",\r\n                button1: () => console.log(\"Button 1 clicked\"),\r\n                button2: () => console.log(\"Button 2 clicked\"),\r\n            },\r\n            {\r\n                id: \"node2\",\r\n                label: \"Node 2\",\r\n                description: \"Description of Node 2\",\r\n                image: \"image2.jpg\",\r\n                button1: () => console.log(\"Button 1 clicked\"),\r\n                button2: () => console.log(\"Button 2 clicked\"),\r\n            },\r\n            {\r\n                id: \"node3\",\r\n                label: \"Node 3\",\r\n                description: \"Description of Node 3\",\r\n                image: \"image3.jpg\",\r\n                button1: () => console.log(\"Button 1 clicked\"),\r\n                button2: () => console.log(\"Button 2 clicked\"),\r\n            },\r\n        ],\r\n        edges: [\r\n            { id: \"edge1\", from: \"node1\", to: \"node2\" },\r\n            { id: \"edge2\", from: \"node2\", to: \"node3\" },\r\n            { id: \"edge3\", from: \"node3\", to: \"node1\" },\r\n        ],\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h2>Main Section</h2>\r\n            <NetworkComponent data={networkData} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainSection;\r\n*/\r\n\r\nimport React from \"react\";\r\nimport { NodeObject } from \"react-force-graph-2d\";\r\nimport MyGraph from \"./forceGraph\";\r\n\r\nconst data = {\r\n    nodes: [\r\n        { id: 1, label: \"Node 1\", contents: \"Some contents for node 1\" },\r\n        { id: 2, label: \"Node 2\", contents: \"Some contents for node 2\" },\r\n        { id: 3, label: \"Node 3\", contents: \"Some contents for node 3\" },\r\n        { id: 4, label: \"Node 4\", contents: \"Some contents for node 4\" },\r\n    ],\r\n    edges: [\r\n        { source: \"1\", targets: [\"2\"] },\r\n        { source: \"2\", targets: [\"3\"] },\r\n        { source: \"3\", targets: [\"4\"] },\r\n    ],\r\n};\r\n\r\nfunction MainSection() {\r\n    return (\r\n        <div style={{ width: \"100vw\", height: \"100vh\" }}>\r\n            <MyGraph data={data} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default MainSection;\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AAEzB,OAAOC,OAAO,MAAM,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,IAAI,GAAG;EACTC,KAAK,EAAE,CACH;IAAEC,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,QAAQ;IAAEC,QAAQ,EAAE;EAA2B,CAAC,EAChE;IAAEF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,QAAQ;IAAEC,QAAQ,EAAE;EAA2B,CAAC,EAChE;IAAEF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,QAAQ;IAAEC,QAAQ,EAAE;EAA2B,CAAC,EAChE;IAAEF,EAAE,EAAE,CAAC;IAAEC,KAAK,EAAE,QAAQ;IAAEC,QAAQ,EAAE;EAA2B,CAAC,CACnE;EACDC,KAAK,EAAE,CACH;IAAEC,MAAM,EAAE,GAAG;IAAEC,OAAO,EAAE,CAAC,GAAG;EAAE,CAAC,EAC/B;IAAED,MAAM,EAAE,GAAG;IAAEC,OAAO,EAAE,CAAC,GAAG;EAAE,CAAC,EAC/B;IAAED,MAAM,EAAE,GAAG;IAAEC,OAAO,EAAE,CAAC,GAAG;EAAE,CAAC;AAEvC,CAAC;AAED,SAASC,WAAWA,CAAA,EAAG;EACnB,oBACIT,OAAA;IAAKU,KAAK,EAAE;MAAEC,KAAK,EAAE,OAAO;MAAEC,MAAM,EAAE;IAAQ,CAAE;IAAAC,QAAA,eAC5Cb,OAAA,CAACF,OAAO;MAACG,IAAI,EAAEA;IAAK;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAEd;AAACC,EAAA,GANQT,WAAW;AAQpB,eAAeA,WAAW;AAAC,IAAAS,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}