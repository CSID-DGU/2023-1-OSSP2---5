{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leesa\\\\Desktop\\\\OSSP-vivace\\\\tempo\\\\client\\\\src\\\\components\\\\Main\\\\Network.tsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useEffect, useState } from \"react\";\nimport * as d3 from \"d3\";\nimport \"./Network.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NetworkGraph = () => {\n  _s();\n  const svgRef = useRef(null);\n  const [selectedNodeId, setSelectedNodeId] = useState(null); // 이동된 위치로 상태 정의\n\n  const handleNodeButtonClick = (node, buttonId) => {\n    console.log(`Button ${buttonId} clicked for node: ${node.id}`);\n    setSelectedNodeId(node.id);\n  };\n  useEffect(() => {\n    const svg = d3.select(svgRef.current);\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n    const nodes = [{\n      id: \"node1\",\n      label: \"Node 1\",\n      hasButton: true\n    }, {\n      id: \"node2\",\n      label: \"Node 2\",\n      hasButton: true\n    }, {\n      id: \"node3\",\n      label: \"Node 3\",\n      hasButton: true\n    }\n\n    // ...\n    ];\n\n    const links = [{\n      source: nodes.find(node => node.id === \"node1\"),\n      target: nodes.find(node => node.id === \"node2\")\n    }, {\n      source: nodes.find(node => node.id === \"node1\"),\n      target: nodes.find(node => node.id === \"node3\")\n    }\n    // Add more links here...\n    ];\n\n    const simulation = d3.forceSimulation(nodes).force(\"link\", d3.forceLink(links).id(d => d.id).distance(100)).force(\"charge\", d3.forceManyBody().strength(-200)).force(\"center\", d3.forceCenter(width / 2, height / 2));\n    const link = svg.selectAll(\".link\").data(links).enter().append(\"line\").attr(\"class\", \"link\");\n    const node = svg.selectAll(\".node\").data(nodes).enter().append(\"g\").attr(\"class\", \"node\").call(d3.drag().on(\"start\", dragStart).on(\"drag\", drag).on(\"end\", dragEnd));\n    node.append(\"rect\").attr(\"class\", \"node-background\").attr(\"x\", 0).attr(\"y\", 0).attr(\"width\", 100).attr(\"height\", 60).style(\"fill\", \"rgb(216, 228, 252)\"); // RGB(255, 0, 0)은 빨간색을 나타냅니다\n\n    node.append(\"text\").attr(\"class\", \"label\").attr(\"x\", 25).attr(\"y\", 15).attr(\"width\", 50).attr(\"height\", 15).attr(\"text-anchor\", \"middle\").text(d => d.label);\n    node.append(\"rect\").attr(\"class\", \"node-rect\").attr(\"x\", 85).attr(\"y\", 6).attr(\"width\", 10).attr(\"height\", 10).on(\"click\", (event, d) => handleNodeButtonClick(d, \"1\"));\n    node.append(\"rect\").attr(\"class\", \"node-button\").attr(\"x\", 70).attr(\"y\", 6).attr(\"width\", 10).attr(\"height\", 10).on(\"click\", (event, d) => handleNodeButtonClick(d, \"2\"));\n    simulation.on(\"tick\", () => {\n      link.attr(\"x1\", d => d.source.x).attr(\"y1\", d => d.source.y).attr(\"x2\", d => d.target.x).attr(\"y2\", d => d.target.y);\n      node.attr(\"transform\", d => `translate(${d.x},${d.y})`);\n    });\n    function drag(event, d) {\n      d.fx = event.x;\n      d.fy = event.y;\n    }\n    function dragStart(event, d) {\n      if (!event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n    function dragEnd(event, d) {\n      if (!event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n    return () => {\n      simulation.stop();\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: svgRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Selected Node ID: \", selectedNodeId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n};\n_s(NetworkGraph, \"APQ+nBbtC/gLa9Pm7Dyc8zzFTJ8=\");\n_c = NetworkGraph;\nexport default NetworkGraph;\nvar _c;\n$RefreshReg$(_c, \"NetworkGraph\");","map":{"version":3,"names":["React","useRef","useEffect","useState","d3","jsxDEV","_jsxDEV","NetworkGraph","_s","svgRef","selectedNodeId","setSelectedNodeId","handleNodeButtonClick","node","buttonId","console","log","id","svg","select","current","width","window","innerWidth","height","innerHeight","nodes","label","hasButton","links","source","find","target","simulation","forceSimulation","force","forceLink","d","distance","forceManyBody","strength","forceCenter","link","selectAll","data","enter","append","attr","call","drag","on","dragStart","dragEnd","style","text","event","x","y","fx","fy","active","alphaTarget","restart","stop","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/leesa/Desktop/OSSP-vivace/tempo/client/src/components/Main/Network.tsx"],"sourcesContent":["import React, { useRef, useEffect, useState } from \"react\";\r\nimport * as d3 from \"d3\";\r\nimport \"./Network.css\";\r\n\r\ninterface NodeData extends d3.SimulationNodeDatum {\r\n    id: string;\r\n    label: string;\r\n    hasButton: boolean;\r\n    x?: number;\r\n    y?: number;\r\n}\r\n\r\ninterface LinkData {\r\n    source: NodeData;\r\n    target: NodeData;\r\n}\r\n\r\nconst NetworkGraph = () => {\r\n    const svgRef = useRef<SVGSVGElement>(null);\r\n    const [selectedNodeId, setSelectedNodeId] = useState<string | null>(null); // 이동된 위치로 상태 정의\r\n\r\n    const handleNodeButtonClick = (node: NodeData, buttonId: string) => {\r\n        console.log(`Button ${buttonId} clicked for node: ${node.id}`);\r\n        setSelectedNodeId(node.id);\r\n    };\r\n\r\n    useEffect(() => {\r\n        const svg = d3.select(svgRef.current);\r\n        const width = window.innerWidth;\r\n        const height = window.innerHeight;\r\n\r\n        const nodes: NodeData[] = [\r\n            { id: \"node1\", label: \"Node 1\", hasButton: true },\r\n            { id: \"node2\", label: \"Node 2\", hasButton: true },\r\n            { id: \"node3\", label: \"Node 3\", hasButton: true },\r\n\r\n            // ...\r\n        ];\r\n\r\n        const links: LinkData[] = [\r\n            { source: nodes.find((node) => node.id === \"node1\")!, target: nodes.find((node) => node.id === \"node2\")! },\r\n            { source: nodes.find((node) => node.id === \"node1\")!, target: nodes.find((node) => node.id === \"node3\")! },\r\n            // Add more links here...\r\n        ];\r\n\r\n        const simulation = d3\r\n            .forceSimulation<NodeData, LinkData>(nodes)\r\n            .force(\r\n                \"link\",\r\n                d3\r\n                    .forceLink<NodeData, LinkData>(links)\r\n                    .id((d) => d.id)\r\n                    .distance(100),\r\n            )\r\n            .force(\"charge\", d3.forceManyBody().strength(-200))\r\n            .force(\"center\", d3.forceCenter(width / 2, height / 2));\r\n\r\n        const link = svg.selectAll(\".link\").data(links).enter().append(\"line\").attr(\"class\", \"link\");\r\n\r\n        const node = svg\r\n            .selectAll<SVGGElement, NodeData>(\".node\")\r\n            .data(nodes)\r\n            .enter()\r\n            .append(\"g\")\r\n            .attr(\"class\", \"node\")\r\n            .call(d3.drag<SVGGElement, NodeData>().on(\"start\", dragStart).on(\"drag\", drag).on(\"end\", dragEnd));\r\n\r\n        node.append(\"rect\")\r\n            .attr(\"class\", \"node-background\")\r\n            .attr(\"x\", 0)\r\n            .attr(\"y\", 0)\r\n            .attr(\"width\", 100)\r\n            .attr(\"height\", 60)\r\n            .style(\"fill\", \"rgb(216, 228, 252)\"); // RGB(255, 0, 0)은 빨간색을 나타냅니다\r\n\r\n        node.append(\"text\")\r\n            .attr(\"class\", \"label\")\r\n            .attr(\"x\", 25)\r\n            .attr(\"y\", 15)\r\n            .attr(\"width\", 50)\r\n            .attr(\"height\", 15)\r\n            .attr(\"text-anchor\", \"middle\")\r\n            .text((d) => d.label);\r\n\r\n        node.append(\"rect\")\r\n            .attr(\"class\", \"node-rect\")\r\n            .attr(\"x\", 85)\r\n            .attr(\"y\", 6)\r\n            .attr(\"width\", 10)\r\n            .attr(\"height\", 10)\r\n            .on(\"click\", (event: any, d: NodeData) => handleNodeButtonClick(d, \"1\"));\r\n\r\n        node.append(\"rect\")\r\n            .attr(\"class\", \"node-button\")\r\n            .attr(\"x\", 70)\r\n            .attr(\"y\", 6)\r\n            .attr(\"width\", 10)\r\n            .attr(\"height\", 10)\r\n            .on(\"click\", (event: any, d: NodeData) => handleNodeButtonClick(d, \"2\"));\r\n\r\n        simulation.on(\"tick\", () => {\r\n            link.attr(\"x1\", (d) => d.source.x!)\r\n                .attr(\"y1\", (d) => d.source.y!)\r\n                .attr(\"x2\", (d) => d.target.x!)\r\n                .attr(\"y2\", (d) => d.target.y!);\r\n\r\n            node.attr(\"transform\", (d) => `translate(${d.x},${d.y})`);\r\n        });\r\n\r\n        function drag(event: d3.D3DragEvent<SVGGElement, NodeData, NodeData | undefined>, d: NodeData) {\r\n            d.fx = event.x;\r\n            d.fy = event.y;\r\n        }\r\n\r\n        function dragStart(event: d3.D3DragEvent<SVGGElement, NodeData, NodeData | undefined>, d: NodeData) {\r\n            if (!event.active) simulation.alphaTarget(0.3).restart();\r\n            d.fx = d.x;\r\n            d.fy = d.y;\r\n        }\r\n\r\n        function dragEnd(event: d3.D3DragEvent<SVGGElement, NodeData, NodeData | undefined>, d: NodeData) {\r\n            if (!event.active) simulation.alphaTarget(0);\r\n            d.fx = null;\r\n            d.fy = null;\r\n        }\r\n        return () => {\r\n            simulation.stop();\r\n        };\r\n    }, []);\r\n\r\n    return (\r\n        <div>\r\n            <svg ref={svgRef}></svg>\r\n            <div>Selected Node ID: {selectedNodeId}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default NetworkGraph;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}