{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leesa\\\\Desktop\\\\OSSP-vivace\\\\tempo\\\\client\\\\src\\\\components\\\\RSideBar\\\\RSideBar.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Tab1 from \"./Tab1\";\nimport Tab2 from \"./Tab2\";\nimport Tab3 from \"./Tab3\";\nimport Tab4 from \"./Tab4\";\nimport Tab5 from \"./Tab5\";\nimport \"./RSideBar.css\";\n// 필요한 만큼의 탭 파일들을 import합니다.\n\n// 탭 버튼의 데이터를 정의합니다.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tabButtons = [{\n  id: \"tab1\",\n  label: \"Tab 1\"\n}, {\n  id: \"tab2\",\n  label: \"Tab 2\"\n}, {\n  id: \"tab3\",\n  label: \"Tab 3\"\n}, {\n  id: \"tab4\",\n  label: \"Tab 4\"\n}, {\n  id: \"tab5\",\n  label: \"Tab 5\"\n}\n// 필요한 만큼의 탭 버튼을 정의합니다.\n];\n\nconst RSideBar = () => {\n  _s();\n  const [activeTab, setActiveTab] = useState(tabButtons[0].id); // 초기값은 첫 번째 탭 버튼의 id\n\n  const handleTabClick = tabId => {\n    setActiveTab(tabId);\n  };\n  const renderActiveTabContent = () => {\n    switch (activeTab) {\n      case \"tab1\":\n        return /*#__PURE__*/_jsxDEV(Tab1, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 24\n        }, this);\n      case \"tab2\":\n        return /*#__PURE__*/_jsxDEV(Tab2, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 24\n        }, this);\n      case \"tab3\":\n        return /*#__PURE__*/_jsxDEV(Tab3, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 24\n        }, this);\n      case \"tab4\":\n        return /*#__PURE__*/_jsxDEV(Tab4, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 24\n        }, this);\n      case \"tab5\":\n        return /*#__PURE__*/_jsxDEV(Tab5, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 24\n        }, this);\n      // 필요한 만큼의 탭 컴포넌트를 렌더링합니다.\n      default:\n        return null;\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"sidebar\",\n      children: tabButtons.map(button => /*#__PURE__*/_jsxDEV(\"li\", {\n        className: activeTab === button.id ? \"active\" : \"\",\n        onClick: () => handleTabClick(button.id),\n        children: button.label\n      }, button.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: renderActiveTabContent()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n_s(RSideBar, \"mWKiIcdfzoTJVGPWCfThLxg+U5Y=\");\n_c = RSideBar;\nexport default RSideBar;\nvar _c;\n$RefreshReg$(_c, \"RSideBar\");","map":{"version":3,"names":["React","useState","Tab1","Tab2","Tab3","Tab4","Tab5","jsxDEV","_jsxDEV","tabButtons","id","label","RSideBar","_s","activeTab","setActiveTab","handleTabClick","tabId","renderActiveTabContent","fileName","_jsxFileName","lineNumber","columnNumber","children","className","map","button","onClick","_c","$RefreshReg$"],"sources":["C:/Users/leesa/Desktop/OSSP-vivace/tempo/client/src/components/RSideBar/RSideBar.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Tab1 from \"./Tab1\";\r\nimport Tab2 from \"./Tab2\";\r\nimport Tab3 from \"./Tab3\";\r\nimport Tab4 from \"./Tab4\";\r\nimport Tab5 from \"./Tab5\";\r\nimport \"./RSideBar.css\";\r\n// 필요한 만큼의 탭 파일들을 import합니다.\r\n\r\n// 탭 버튼의 데이터를 정의합니다.\r\ninterface TabButton {\r\n    id: string;\r\n    label: string;\r\n}\r\n\r\nconst tabButtons: TabButton[] = [\r\n    { id: \"tab1\", label: \"Tab 1\" },\r\n    { id: \"tab2\", label: \"Tab 2\" },\r\n    { id: \"tab3\", label: \"Tab 3\" },\r\n    { id: \"tab4\", label: \"Tab 4\" },\r\n    { id: \"tab5\", label: \"Tab 5\" },\r\n    // 필요한 만큼의 탭 버튼을 정의합니다.\r\n];\r\n\r\nconst RSideBar: React.FC = () => {\r\n    const [activeTab, setActiveTab] = useState(tabButtons[0].id); // 초기값은 첫 번째 탭 버튼의 id\r\n\r\n    const handleTabClick = (tabId: string) => {\r\n        setActiveTab(tabId);\r\n    };\r\n\r\n    const renderActiveTabContent = () => {\r\n        switch (activeTab) {\r\n            case \"tab1\":\r\n                return <Tab1 />;\r\n            case \"tab2\":\r\n                return <Tab2 />;\r\n            case \"tab3\":\r\n                return <Tab3 />;\r\n            case \"tab4\":\r\n                return <Tab4 />;\r\n            case \"tab5\":\r\n                return <Tab5 />;\r\n            // 필요한 만큼의 탭 컴포넌트를 렌더링합니다.\r\n            default:\r\n                return null;\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <ul className=\"sidebar\">\r\n                {tabButtons.map((button) => (\r\n                    <li\r\n                        key={button.id}\r\n                        className={activeTab === button.id ? \"active\" : \"\"}\r\n                        onClick={() => handleTabClick(button.id)}\r\n                    >\r\n                        {button.label}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n            <div className=\"content\">{renderActiveTabContent()}</div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default RSideBar;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}