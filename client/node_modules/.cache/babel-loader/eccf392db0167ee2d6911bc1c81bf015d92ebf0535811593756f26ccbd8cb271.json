{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leesa\\\\Desktop\\\\OSSP-vivace\\\\tempo\\\\client\\\\src\\\\components\\\\Main\\\\Kanban.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport BorderColorIcon from \"@mui/icons-material/BorderColor\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport \"./Kanban.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialColumns = [{\n  id: \"column-1\",\n  title: \"column 1\",\n  tasks: [\"task-1\", \"task-2\", \"task-3\"]\n}, {\n  id: \"column-2\",\n  title: \"column 2\",\n  tasks: [\"task-4\", \"task-5\"]\n}];\nconst initialTasks = {\n  \"task-1\": {\n    id: \"task-1\",\n    content: \"작업 1\"\n  },\n  \"task-2\": {\n    id: \"task-2\",\n    content: \"작업 2\"\n  },\n  \"task-3\": {\n    id: \"task-3\",\n    content: \"작업 3\"\n  },\n  \"task-4\": {\n    id: \"task-4\",\n    content: \"작업 4\"\n  },\n  \"task-5\": {\n    id: \"task-5\",\n    content: \"작업 5\"\n  }\n};\nconst Kanban = () => {\n  _s();\n  const [columns, setColumns] = useState(initialColumns);\n  const [tasks, setTasks] = useState(initialTasks);\n  const handleDragEnd = result => {\n    const {\n      source,\n      destination,\n      type\n    } = result;\n    if (!destination) {\n      return;\n    }\n    if (type === \"column\") {\n      const newColumns = Array.from(columns);\n      const [removed] = newColumns.splice(source.index, 1);\n      newColumns.splice(destination.index, 0, removed);\n      setColumns(newColumns);\n    } else if (type === \"task\") {\n      const sourceColumn = columns.find(col => col.id === source.droppableId);\n      const destinationColumn = columns.find(col => col.id === destination.droppableId);\n      if (sourceColumn && destinationColumn && sourceColumn === destinationColumn) {\n        const column = columns.find(col => col.id === source.droppableId);\n        if (column) {\n          const newTasks = Array.from(column.tasks);\n          const [removed] = newTasks.splice(source.index, 1);\n          newTasks.splice(destination.index, 0, removed);\n          const updatedColumns = columns.map(col => {\n            if (col.id === source.droppableId) {\n              return {\n                ...col,\n                tasks: newTasks\n              }; //column에 taskList 업데이트\n            }\n\n            return col;\n          });\n          setColumns(updatedColumns); //업데이트된 column으로 세팅\n        }\n      } else if (sourceColumn && destinationColumn && sourceColumn !== destinationColumn) {\n        const sourceTasks = Array.from(sourceColumn.tasks);\n        const destinationTasks = Array.from(destinationColumn.tasks);\n        const [removed] = sourceTasks.splice(source.index, 1);\n        destinationTasks.splice(destination.index, 0, removed);\n        const updatedColumns = columns.map(col => {\n          if (col.id === source.droppableId) {\n            return {\n              ...col,\n              tasks: sourceTasks\n            };\n          }\n          if (col.id === destination.droppableId) {\n            return {\n              ...col,\n              tasks: destinationTasks\n            };\n          }\n          return col;\n        });\n        setColumns(updatedColumns);\n      }\n    }\n  };\n  const addColumn = () => {\n    const newColumnId = `column-${columns.length + 1}`;\n    const newColumn = {\n      id: newColumnId,\n      title: `column ${columns.length + 1}`,\n      tasks: []\n    };\n    setColumns([...columns, newColumn]);\n    setTasks({\n      ...tasks,\n      [newColumnId]: {\n        id: newColumnId,\n        content: \"\"\n      }\n    });\n  };\n  const updateColumnTitle = (columnId, newTitle) => {\n    const updatedColumns = columns.map(col => {\n      if (col.id === columnId) {\n        return {\n          ...col,\n          title: newTitle\n        };\n      }\n      return col;\n    });\n    setColumns(updatedColumns);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"kanban\",\n    children: /*#__PURE__*/_jsxDEV(DragDropContext, {\n      onDragEnd: handleDragEnd,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"column-container\",\n        children: /*#__PURE__*/_jsxDEV(Droppable, {\n          droppableId: \"all-columns\",\n          direction: \"horizontal\",\n          type: \"column\",\n          children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"column-container\",\n            ref: provided.innerRef,\n            ...provided.droppableProps,\n            children: [columns.map((column, columnIndex) => /*#__PURE__*/_jsxDEV(Draggable, {\n              draggableId: column.id,\n              index: columnIndex,\n              children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"column\",\n                ref: provided.innerRef,\n                ...provided.draggableProps,\n                ...provided.dragHandleProps,\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"column-header\",\n                  children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                    className: \"column-title\",\n                    children: column.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"column-title-button\",\n                    onClick: () => {\n                      const newTitle = prompt(\"새로운 열 제목을 입력하세요:\");\n                      if (newTitle) {\n                        updateColumnTitle(column.id, newTitle);\n                      }\n                    },\n                    children: /*#__PURE__*/_jsxDEV(BorderColorIcon, {\n                      className: \"reName\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 130,\n                      columnNumber: 57\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"task-count\",\n                    children: column.tasks.length\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Droppable, {\n                  droppableId: column.id,\n                  type: \"task\",\n                  children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"task-list\",\n                    ref: provided.innerRef,\n                    ...provided.droppableProps,\n                    children: [column.tasks.map((taskId, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n                      draggableId: taskId,\n                      index: index,\n                      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"task\",\n                        ref: provided.innerRef,\n                        ...provided.draggableProps,\n                        ...provided.dragHandleProps,\n                        children: /*#__PURE__*/_jsxDEV(\"p\", {\n                          children: tasks[taskId].content\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 154,\n                          columnNumber: 77\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 148,\n                        columnNumber: 73\n                      }, this)\n                    }, taskId, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 142,\n                      columnNumber: 65\n                    }, this)), provided.placeholder]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 57\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 45\n              }, this)\n            }, column.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 37\n            }, this)), provided.placeholder, /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"add-column-button-container\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"add-column-button\",\n                onClick: addColumn,\n                children: /*#__PURE__*/_jsxDEV(AddIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 9\n  }, this);\n};\n_s(Kanban, \"R5b/ZdhZGD82TPodfVYYdaDf5Ss=\");\n_c = Kanban;\nexport default Kanban;\nvar _c;\n$RefreshReg$(_c, \"Kanban\");","map":{"version":3,"names":["React","useState","DragDropContext","Droppable","Draggable","BorderColorIcon","AddIcon","jsxDEV","_jsxDEV","initialColumns","id","title","tasks","initialTasks","content","Kanban","_s","columns","setColumns","setTasks","handleDragEnd","result","source","destination","type","newColumns","Array","from","removed","splice","index","sourceColumn","find","col","droppableId","destinationColumn","column","newTasks","updatedColumns","map","sourceTasks","destinationTasks","addColumn","newColumnId","length","newColumn","updateColumnTitle","columnId","newTitle","className","children","onDragEnd","direction","provided","ref","innerRef","droppableProps","columnIndex","draggableId","draggableProps","dragHandleProps","fileName","_jsxFileName","lineNumber","columnNumber","onClick","prompt","taskId","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/leesa/Desktop/OSSP-vivace/tempo/client/src/components/Main/Kanban.tsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable, DropResult } from \"react-beautiful-dnd\";\r\nimport BorderColorIcon from \"@mui/icons-material/BorderColor\";\r\nimport AddIcon from \"@mui/icons-material/Add\";\r\nimport \"./Kanban.css\";\r\n\r\nconst initialColumns = [\r\n    { id: \"column-1\", title: \"column 1\", tasks: [\"task-1\", \"task-2\", \"task-3\"] },\r\n    { id: \"column-2\", title: \"column 2\", tasks: [\"task-4\", \"task-5\"] },\r\n];\r\n\r\nconst initialTasks: { [key: string]: { id: string; content: string } } = {\r\n    \"task-1\": { id: \"task-1\", content: \"작업 1\" },\r\n    \"task-2\": { id: \"task-2\", content: \"작업 2\" },\r\n    \"task-3\": { id: \"task-3\", content: \"작업 3\" },\r\n    \"task-4\": { id: \"task-4\", content: \"작업 4\" },\r\n    \"task-5\": { id: \"task-5\", content: \"작업 5\" },\r\n};\r\n\r\nconst Kanban: React.FC = () => {\r\n    const [columns, setColumns] = useState(initialColumns);\r\n    const [tasks, setTasks] = useState(initialTasks);\r\n\r\n    const handleDragEnd = (result: DropResult) => {\r\n        const { source, destination, type } = result;\r\n\r\n        if (!destination) {\r\n            return;\r\n        }\r\n\r\n        if (type === \"column\") {\r\n            const newColumns = Array.from(columns);\r\n            const [removed] = newColumns.splice(source.index, 1);\r\n            newColumns.splice(destination.index, 0, removed);\r\n            setColumns(newColumns);\r\n        } else if (type === \"task\") {\r\n            const sourceColumn = columns.find((col) => col.id === source.droppableId);\r\n            const destinationColumn = columns.find((col) => col.id === destination.droppableId);\r\n\r\n            if (sourceColumn && destinationColumn && sourceColumn === destinationColumn) {\r\n                const column = columns.find((col) => col.id === source.droppableId);\r\n                if (column) {\r\n                    const newTasks = Array.from(column.tasks);\r\n                    const [removed] = newTasks.splice(source.index, 1);\r\n                    newTasks.splice(destination.index, 0, removed);\r\n\r\n                    const updatedColumns = columns.map((col) => {\r\n                        if (col.id === source.droppableId) {\r\n                            return { ...col, tasks: newTasks }; //column에 taskList 업데이트\r\n                        }\r\n                        return col;\r\n                    });\r\n\r\n                    setColumns(updatedColumns); //업데이트된 column으로 세팅\r\n                }\r\n            } else if (sourceColumn && destinationColumn && sourceColumn !== destinationColumn) {\r\n                const sourceTasks = Array.from(sourceColumn.tasks);\r\n                const destinationTasks = Array.from(destinationColumn.tasks);\r\n                const [removed] = sourceTasks.splice(source.index, 1);\r\n                destinationTasks.splice(destination.index, 0, removed);\r\n\r\n                const updatedColumns = columns.map((col) => {\r\n                    if (col.id === source.droppableId) {\r\n                        return { ...col, tasks: sourceTasks };\r\n                    }\r\n                    if (col.id === destination.droppableId) {\r\n                        return { ...col, tasks: destinationTasks };\r\n                    }\r\n                    return col;\r\n                });\r\n\r\n                setColumns(updatedColumns);\r\n            }\r\n        }\r\n    };\r\n\r\n    const addColumn = () => {\r\n        const newColumnId = `column-${columns.length + 1}`;\r\n        const newColumn = {\r\n            id: newColumnId,\r\n            title: `column ${columns.length + 1}`,\r\n            tasks: [],\r\n        };\r\n\r\n        setColumns([...columns, newColumn]);\r\n        setTasks({\r\n            ...tasks,\r\n            [newColumnId]: { id: newColumnId, content: \"\" },\r\n        });\r\n    };\r\n\r\n    const updateColumnTitle = (columnId: string, newTitle: string) => {\r\n        const updatedColumns = columns.map((col) => {\r\n            if (col.id === columnId) {\r\n                return { ...col, title: newTitle };\r\n            }\r\n            return col;\r\n        });\r\n\r\n        setColumns(updatedColumns);\r\n    };\r\n\r\n    return (\r\n        <div className=\"kanban\">\r\n            <DragDropContext onDragEnd={handleDragEnd}>\r\n                <div className=\"column-container\">\r\n                    <Droppable droppableId=\"all-columns\" direction=\"horizontal\" type=\"column\">\r\n                        {(provided) => (\r\n                            <div className=\"column-container\" ref={provided.innerRef} {...provided.droppableProps}>\r\n                                {columns.map((column, columnIndex) => (\r\n                                    <Draggable draggableId={column.id} index={columnIndex} key={column.id}>\r\n                                        {(provided) => (\r\n                                            <div\r\n                                                className=\"column\"\r\n                                                ref={provided.innerRef}\r\n                                                {...provided.draggableProps}\r\n                                                {...provided.dragHandleProps}\r\n                                            >\r\n                                                <div className=\"column-header\">\r\n                                                    <h2 className=\"column-title\">{column.title}</h2>\r\n                                                    <button\r\n                                                        className=\"column-title-button\"\r\n                                                        onClick={() => {\r\n                                                            const newTitle = prompt(\"새로운 열 제목을 입력하세요:\");\r\n                                                            if (newTitle) {\r\n                                                                updateColumnTitle(column.id, newTitle);\r\n                                                            }\r\n                                                        }}\r\n                                                    >\r\n                                                        <BorderColorIcon className=\"reName\" />\r\n                                                    </button>\r\n                                                    <span className=\"task-count\">{column.tasks.length}</span>\r\n                                                </div>\r\n                                                <Droppable droppableId={column.id} type=\"task\">\r\n                                                    {(provided) => (\r\n                                                        <div\r\n                                                            className=\"task-list\"\r\n                                                            ref={provided.innerRef}\r\n                                                            {...provided.droppableProps}\r\n                                                        >\r\n                                                            {column.tasks.map((taskId, index) => (\r\n                                                                <Draggable\r\n                                                                    draggableId={taskId}\r\n                                                                    index={index}\r\n                                                                    key={taskId}\r\n                                                                >\r\n                                                                    {(provided) => (\r\n                                                                        <div\r\n                                                                            className=\"task\"\r\n                                                                            ref={provided.innerRef}\r\n                                                                            {...provided.draggableProps}\r\n                                                                            {...provided.dragHandleProps}\r\n                                                                        >\r\n                                                                            <p>{tasks[taskId].content}</p>\r\n                                                                        </div>\r\n                                                                    )}\r\n                                                                </Draggable>\r\n                                                            ))}\r\n                                                            {provided.placeholder}\r\n                                                        </div>\r\n                                                    )}\r\n                                                </Droppable>\r\n                                            </div>\r\n                                        )}\r\n                                    </Draggable>\r\n                                ))}\r\n                                {provided.placeholder}\r\n                                <div className=\"add-column-button-container\">\r\n                                    <button className=\"add-column-button\" onClick={addColumn}>\r\n                                        <AddIcon />\r\n                                    </button>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                    </Droppable>\r\n                </div>\r\n            </DragDropContext>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Kanban;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}