{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\leesa\\\\Desktop\\\\OSSP-vivace\\\\tempo\\\\client\\\\src\\\\components\\\\MainSect\\\\MainSect.tsx\",\n  _s = $RefreshSig$();\n/*\r\nimport React from \"react\";\r\nimport Board, { BoardProps } from \"./Kanban\";\r\n\r\nconst MainPage: React.FC = () => {\r\n    const boardProps: BoardProps = {\r\n        columns: [\r\n            {\r\n                id: \"column-1\",\r\n                title: \"Column 1\",\r\n                tasks: [\r\n                    {\r\n                        id: \"task-1\",\r\n                        title: \"Task 1\",\r\n                    },\r\n                    {\r\n                        id: \"task-2\",\r\n                        title: \"Task 2\",\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                id: \"column-2\",\r\n                title: \"Column 2\",\r\n                tasks: [\r\n                    {\r\n                        id: \"task-3\",\r\n                        title: \"Task 3\",\r\n                    },\r\n                    {\r\n                        id: \"task-4\",\r\n                        title: \"Task 4\",\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n        onAddColumn: (title: string) => {\r\n            // Add column logic here\r\n        },\r\n        onDeleteColumn: (id: string) => {\r\n            // Delete column logic here\r\n        },\r\n        onMoveColumn: (startIndex: number, endIndex: number) => {\r\n            // Move column logic here\r\n        },\r\n        onMoveTask: (source: { columnId: string; index: number }, destination: { columnId: string; index: number }) => {\r\n            // Move task logic here\r\n        },\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Main Page</h1>\r\n            <Board {...boardProps} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainPage;\r\n*/\n\n// import NetworkComponent from \"./Graph\";\n\n// function MainSection() {\n//     const networkData = {\n//         nodes: [\n//             {\n//                 id: \"node1\",\n//                 label: \"Node 1\",\n//                 description: \"Description of Node 1\",\n//                 image: \"image1.jpg\",\n//                 button1: () => console.log(\"Button 1 clicked\"),\n//                 button2: () => console.log(\"Button 2 clicked\"),\n//             },\n//             {\n//                 id: \"node2\",\n//                 label: \"Node 2\",\n//                 description: \"Description of Node 2\",\n//                 image: \"image2.jpg\",\n//                 button1: () => console.log(\"Button 1 clicked\"),\n//                 button2: () => console.log(\"Button 2 clicked\"),\n//             },\n//             {\n//                 id: \"node3\",\n//                 label: \"Node 3\",\n//                 description: \"Description of Node 3\",\n//                 image: \"image3.jpg\",\n//                 button1: () => console.log(\"Button 1 clicked\"),\n//                 button2: () => console.log(\"Button 2 clicked\"),\n//             },\n//         ],\n//         edges: [\n//             { id: \"edge1\", from: \"node1\", to: \"node2\" },\n//             { id: \"edge2\", from: \"node2\", to: \"node3\" },\n//             { id: \"edge3\", from: \"node3\", to: \"node1\" },\n//         ],\n//     };\n\n//     return (\n//         <div>\n//             <h2>Main Section</h2>\n//             <NetworkComponent data={networkData} />\n//         </div>\n//     );\n// }\n\n// export default MainSection;\n\n// import React from \"react\";\n// import ForceGraph2D, { NodeObject } from \"react-force-graph-2d\";\n\n// interface MainSectionProps {\n//     data: { nodes: NodeObject[]; edges: { source: string; targets: string[] }[] };\n// }\n\n// function MainSection({ data }: MainSectionProps) {\n//     return (\n//         <div className=\"main-section\">\n//             <ForceGraph2D graphData={data} />\n//         </div>\n//     );\n// }\n\n// export default MainSection;\nimport React, { useState } from \"react\";\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst tasks = [{\n  id: \"1\",\n  content: \"할 일 1\"\n}, {\n  id: \"2\",\n  content: \"할 일 2\"\n}, {\n  id: \"3\",\n  content: \"할 일 3\"\n}, {\n  id: \"4\",\n  content: \"할 일 4\"\n}];\nconst MainSection = () => {\n  _s();\n  const [taskList, setTaskList] = useState(tasks);\n  const onDragEnd = result => {\n    if (!result.destination) {\n      return;\n    }\n    const newTaskList = Array.from(taskList);\n    const [removed] = newTaskList.splice(result.source.index, 1);\n    newTaskList.splice(result.destination.index, 0, removed);\n    setTaskList(newTaskList);\n  };\n  return /*#__PURE__*/_jsxDEV(DragDropContext, {\n    onDragEnd: onDragEnd,\n    children: /*#__PURE__*/_jsxDEV(Droppable, {\n      droppableId: \"tasks\",\n      children: provided => /*#__PURE__*/_jsxDEV(\"div\", {\n        ...provided.droppableProps,\n        ref: provided.innerRef,\n        children: [taskList.map((task, index) => /*#__PURE__*/_jsxDEV(Draggable, {\n          draggableId: task.id,\n          index: index,\n          children: (provided, snapshot) => /*#__PURE__*/_jsxDEV(\"div\", {\n            ref: provided.innerRef,\n            ...provided.draggableProps,\n            ...provided.dragHandleProps,\n            style: {\n              userSelect: \"none\",\n              padding: 16,\n              margin: \"0 0 8px 0\",\n              minHeight: \"50px\",\n              backgroundColor: snapshot.isDragging ? \"#263B4A\" : \"#456C86\",\n              color: \"white\",\n              ...provided.draggableProps.style\n            },\n            children: task.content\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 37\n          }, this)\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 29\n        }, this)), provided.placeholder]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 9\n  }, this);\n};\n_s(MainSection, \"/8+7t2IpMUHmmsHsA5X6Y/Ga+lk=\");\n_c = MainSection;\nexport default MainSection;\nvar _c;\n$RefreshReg$(_c, \"MainSection\");","map":{"version":3,"names":["React","useState","DragDropContext","Droppable","Draggable","jsxDEV","_jsxDEV","tasks","id","content","MainSection","_s","taskList","setTaskList","onDragEnd","result","destination","newTaskList","Array","from","removed","splice","source","index","children","droppableId","provided","droppableProps","ref","innerRef","map","task","draggableId","snapshot","draggableProps","dragHandleProps","style","userSelect","padding","margin","minHeight","backgroundColor","isDragging","color","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","_c","$RefreshReg$"],"sources":["C:/Users/leesa/Desktop/OSSP-vivace/tempo/client/src/components/MainSect/MainSect.tsx"],"sourcesContent":["/*\r\nimport React from \"react\";\r\nimport Board, { BoardProps } from \"./Kanban\";\r\n\r\nconst MainPage: React.FC = () => {\r\n    const boardProps: BoardProps = {\r\n        columns: [\r\n            {\r\n                id: \"column-1\",\r\n                title: \"Column 1\",\r\n                tasks: [\r\n                    {\r\n                        id: \"task-1\",\r\n                        title: \"Task 1\",\r\n                    },\r\n                    {\r\n                        id: \"task-2\",\r\n                        title: \"Task 2\",\r\n                    },\r\n                ],\r\n            },\r\n            {\r\n                id: \"column-2\",\r\n                title: \"Column 2\",\r\n                tasks: [\r\n                    {\r\n                        id: \"task-3\",\r\n                        title: \"Task 3\",\r\n                    },\r\n                    {\r\n                        id: \"task-4\",\r\n                        title: \"Task 4\",\r\n                    },\r\n                ],\r\n            },\r\n        ],\r\n        onAddColumn: (title: string) => {\r\n            // Add column logic here\r\n        },\r\n        onDeleteColumn: (id: string) => {\r\n            // Delete column logic here\r\n        },\r\n        onMoveColumn: (startIndex: number, endIndex: number) => {\r\n            // Move column logic here\r\n        },\r\n        onMoveTask: (source: { columnId: string; index: number }, destination: { columnId: string; index: number }) => {\r\n            // Move task logic here\r\n        },\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <h1>Main Page</h1>\r\n            <Board {...boardProps} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MainPage;\r\n*/\r\n\r\n// import NetworkComponent from \"./Graph\";\r\n\r\n// function MainSection() {\r\n//     const networkData = {\r\n//         nodes: [\r\n//             {\r\n//                 id: \"node1\",\r\n//                 label: \"Node 1\",\r\n//                 description: \"Description of Node 1\",\r\n//                 image: \"image1.jpg\",\r\n//                 button1: () => console.log(\"Button 1 clicked\"),\r\n//                 button2: () => console.log(\"Button 2 clicked\"),\r\n//             },\r\n//             {\r\n//                 id: \"node2\",\r\n//                 label: \"Node 2\",\r\n//                 description: \"Description of Node 2\",\r\n//                 image: \"image2.jpg\",\r\n//                 button1: () => console.log(\"Button 1 clicked\"),\r\n//                 button2: () => console.log(\"Button 2 clicked\"),\r\n//             },\r\n//             {\r\n//                 id: \"node3\",\r\n//                 label: \"Node 3\",\r\n//                 description: \"Description of Node 3\",\r\n//                 image: \"image3.jpg\",\r\n//                 button1: () => console.log(\"Button 1 clicked\"),\r\n//                 button2: () => console.log(\"Button 2 clicked\"),\r\n//             },\r\n//         ],\r\n//         edges: [\r\n//             { id: \"edge1\", from: \"node1\", to: \"node2\" },\r\n//             { id: \"edge2\", from: \"node2\", to: \"node3\" },\r\n//             { id: \"edge3\", from: \"node3\", to: \"node1\" },\r\n//         ],\r\n//     };\r\n\r\n//     return (\r\n//         <div>\r\n//             <h2>Main Section</h2>\r\n//             <NetworkComponent data={networkData} />\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default MainSection;\r\n\r\n// import React from \"react\";\r\n// import ForceGraph2D, { NodeObject } from \"react-force-graph-2d\";\r\n\r\n// interface MainSectionProps {\r\n//     data: { nodes: NodeObject[]; edges: { source: string; targets: string[] }[] };\r\n// }\r\n\r\n// function MainSection({ data }: MainSectionProps) {\r\n//     return (\r\n//         <div className=\"main-section\">\r\n//             <ForceGraph2D graphData={data} />\r\n//         </div>\r\n//     );\r\n// }\r\n\r\n// export default MainSection;\r\nimport React, { useState } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable, DropResult } from \"react-beautiful-dnd\";\r\n\r\ntype TaskType = {\r\n    id: string;\r\n    content: string;\r\n};\r\n\r\nconst tasks: TaskType[] = [\r\n    { id: \"1\", content: \"할 일 1\" },\r\n    { id: \"2\", content: \"할 일 2\" },\r\n    { id: \"3\", content: \"할 일 3\" },\r\n    { id: \"4\", content: \"할 일 4\" },\r\n];\r\n\r\nconst MainSection = () => {\r\n    const [taskList, setTaskList] = useState(tasks);\r\n\r\n    const onDragEnd = (result: DropResult) => {\r\n        if (!result.destination) {\r\n            return;\r\n        }\r\n\r\n        const newTaskList = Array.from(taskList);\r\n        const [removed] = newTaskList.splice(result.source.index, 1);\r\n        newTaskList.splice(result.destination.index, 0, removed);\r\n\r\n        setTaskList(newTaskList);\r\n    };\r\n\r\n    return (\r\n        <DragDropContext onDragEnd={onDragEnd}>\r\n            <Droppable droppableId=\"tasks\">\r\n                {(provided) => (\r\n                    <div {...provided.droppableProps} ref={provided.innerRef}>\r\n                        {taskList.map((task, index) => (\r\n                            <Draggable key={task.id} draggableId={task.id} index={index}>\r\n                                {(provided, snapshot) => (\r\n                                    <div\r\n                                        ref={provided.innerRef}\r\n                                        {...provided.draggableProps}\r\n                                        {...provided.dragHandleProps}\r\n                                        style={{\r\n                                            userSelect: \"none\",\r\n                                            padding: 16,\r\n                                            margin: \"0 0 8px 0\",\r\n                                            minHeight: \"50px\",\r\n                                            backgroundColor: snapshot.isDragging ? \"#263B4A\" : \"#456C86\",\r\n                                            color: \"white\",\r\n                                            ...provided.draggableProps.style,\r\n                                        }}\r\n                                    >\r\n                                        {task.content}\r\n                                    </div>\r\n                                )}\r\n                            </Draggable>\r\n                        ))}\r\n                        {provided.placeholder}\r\n                    </div>\r\n                )}\r\n            </Droppable>\r\n        </DragDropContext>\r\n    );\r\n};\r\n\r\nexport default MainSection;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,eAAe,EAAEC,SAAS,EAAEC,SAAS,QAAoB,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOxF,MAAMC,KAAiB,GAAG,CACtB;EAAEC,EAAE,EAAE,GAAG;EAAEC,OAAO,EAAE;AAAQ,CAAC,EAC7B;EAAED,EAAE,EAAE,GAAG;EAAEC,OAAO,EAAE;AAAQ,CAAC,EAC7B;EAAED,EAAE,EAAE,GAAG;EAAEC,OAAO,EAAE;AAAQ,CAAC,EAC7B;EAAED,EAAE,EAAE,GAAG;EAAEC,OAAO,EAAE;AAAQ,CAAC,CAChC;AAED,MAAMC,WAAW,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAACM,KAAK,CAAC;EAE/C,MAAMO,SAAS,GAAIC,MAAkB,IAAK;IACtC,IAAI,CAACA,MAAM,CAACC,WAAW,EAAE;MACrB;IACJ;IAEA,MAAMC,WAAW,GAAGC,KAAK,CAACC,IAAI,CAACP,QAAQ,CAAC;IACxC,MAAM,CAACQ,OAAO,CAAC,GAAGH,WAAW,CAACI,MAAM,CAACN,MAAM,CAACO,MAAM,CAACC,KAAK,EAAE,CAAC,CAAC;IAC5DN,WAAW,CAACI,MAAM,CAACN,MAAM,CAACC,WAAW,CAACO,KAAK,EAAE,CAAC,EAAEH,OAAO,CAAC;IAExDP,WAAW,CAACI,WAAW,CAAC;EAC5B,CAAC;EAED,oBACIX,OAAA,CAACJ,eAAe;IAACY,SAAS,EAAEA,SAAU;IAAAU,QAAA,eAClClB,OAAA,CAACH,SAAS;MAACsB,WAAW,EAAC,OAAO;MAAAD,QAAA,EACxBE,QAAQ,iBACNpB,OAAA;QAAA,GAASoB,QAAQ,CAACC,cAAc;QAAEC,GAAG,EAAEF,QAAQ,CAACG,QAAS;QAAAL,QAAA,GACpDZ,QAAQ,CAACkB,GAAG,CAAC,CAACC,IAAI,EAAER,KAAK,kBACtBjB,OAAA,CAACF,SAAS;UAAe4B,WAAW,EAAED,IAAI,CAACvB,EAAG;UAACe,KAAK,EAAEA,KAAM;UAAAC,QAAA,EACvDA,CAACE,QAAQ,EAAEO,QAAQ,kBAChB3B,OAAA;YACIsB,GAAG,EAAEF,QAAQ,CAACG,QAAS;YAAA,GACnBH,QAAQ,CAACQ,cAAc;YAAA,GACvBR,QAAQ,CAACS,eAAe;YAC5BC,KAAK,EAAE;cACHC,UAAU,EAAE,MAAM;cAClBC,OAAO,EAAE,EAAE;cACXC,MAAM,EAAE,WAAW;cACnBC,SAAS,EAAE,MAAM;cACjBC,eAAe,EAAER,QAAQ,CAACS,UAAU,GAAG,SAAS,GAAG,SAAS;cAC5DC,KAAK,EAAE,OAAO;cACd,GAAGjB,QAAQ,CAACQ,cAAc,CAACE;YAC/B,CAAE;YAAAZ,QAAA,EAEDO,IAAI,CAACtB;UAAO;YAAAmC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACZ;QACR,GAlBWhB,IAAI,CAACvB,EAAE;UAAAoC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAmBZ,CACd,CAAC,EACDrB,QAAQ,CAACsB,WAAW;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB;IACR;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACM;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAE1B,CAAC;AAACpC,EAAA,CAhDID,WAAW;AAAAuC,EAAA,GAAXvC,WAAW;AAkDjB,eAAeA,WAAW;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}